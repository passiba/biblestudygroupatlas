<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:jms="http://www.springframework.org/schema/jms"
     xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd">
            
   <tx:annotation-driven transaction-manager="transactionManager"/>
  
    <import resource="classpath:META-INF/biblestudy-data-hibernate.xml"/>
  <import resource="classpath:META-INF/biblestudy-jmsservice.xml"/>
  <bean id="IBibleStudyService" class="fi.passiba.biblestudy.restlet.BibleStudyServiceImp">
        <property name="translationDao" ref="BibletranslationDAO"/>
        <property name="sectionDao" ref="BooksectionDAO" />
        <property name="bookDAO" ref="BookDAO" />
        <property name="chapterDao" ref="ChapterDAO" />
        <property name="verseDAO" ref="VerseDAO" />
    </bean>
        <!-- Quartz sceduling on single method
    <bean id="dailyBibleDataRetrievalJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="IBibleDataMining"/>
        <property name="targetMethod" value="retrieveBookdata" />
    </bean> -->
        
     <!--
            A CronTriggerBean, scheduler to run before mightnight every night
             cronExpresson=sec_min_hours_dayOfMonth_Month_DayOfWeek
    
    <bean id="cronBibleBookDataTrigger"
      class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="dailyBibleDataRetrievalJob"/>
        
        <property name="cronExpression" value="0 40 20 * * ?" />
    </bean>
-->
   <!--
     A SchedulerFactoryBean to start the cronBibleBookDataTrigger.
    
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronBibleBookDataTrigger"/>
            </list>
        </property>
    </bean>
    
     A meta-data based assembler, enables metadata specific services exposed as (JMX)managed bean
  <bean id="assembler"
      class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
    <property name="attributeSource" ref="attributeSource" />
  </bean>
  
  <bean id="attributeSource"
      class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />-->
      
  <!-- The metadata-driven MBeanExporter 
  <bean class="org.springframework.jmx.export.MBeanExporter">
    <property name="namingStrategy" ref="jmxnamingStrategy" />
 	  <property name="assembler" ref="assembler" />
    <property name="autodetectModeName" value="AUTODETECT_ASSEMBLER" />
  </bean>-->
  
  <!-- A meta-data based naming strategy> 
  <bean id="jmxnamingStrategy"
      class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
    <property name="attributeSource" ref="attributeSource" />
  </bean> -->
  
  <!--Spring web serice client for retrieval of bible translation 
  
   <bean id="webServiceTemplate" 
      class="org.springframework.ws.client.core.WebServiceTemplate">
    <property name="marshaller" ref="marshaller" />
    <property name="unmarshaller" ref="marshaller" />
    <property name="defaultUri" value="http://www.gnpcb.org/esv/share/soap/" />
  </bean>-->
   <bean id="IBibleDataMining" class="fi.passiba.biblestudy.services.datamining.BibleDataMiningImp">
        <property name="datasourceDAO" ref="BookDatasouceDAO"/>
        <property name="translationDAO" ref="BibletranslationDAO"/>
        <property name="booksectionDAO" ref="BooksectionDAO"/>
        <property name="bookDAO" ref="BookDAO"/>
        <property name="chapterDAO" ref="ChapterDAO"/>
        <property name="verseDAO" ref="VerseDAO" />
        <property name="chapterVotingDAO" ref="ChapterVotingDAO" />
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
     
  <!-- crating pure MD pojo can be accomplished by using MessageListnerAdaper,which hides JMS specific
  code of recieving JMS Message and the converter converts MapMessage into the bean type which we expect to
  be returend from the queue-->

   <bean id="bibleBookDataListner" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="IBibleDataMining"/>
        <property name="defaultListenerMethod" value="addBibleData"/>
        <property name="messageConverter" ref="bibleBookDataConverter"/>
  </bean> 
   <!-- and this is the message listener container -->
    <bean id="activationQueueJmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsConntectionFactory"/>
        <property name="destination" ref="biblebookDataDestination"/>
        <property name="messageListener" ref="bibleBookDataListner" />
        <property name="transactionManager" ref="jmsTransActionManager"/>
    </bean>

  

   
</beans>