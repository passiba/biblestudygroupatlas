<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:jee="http://www.springframework.org/schema/jee"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
            
   <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:application.properties</value>
        </property>
        <property name="systemPropertiesModeName">
            <value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
        </property>
    </bean>
    <bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass">
            <value>${jdbc.driver}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="minPoolSize">
            <value>${c3p0.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${c3p0.maxPoolSize}</value>
        </property>
        <property name="checkoutTimeout">
			<!-- Give up waiting for a connection after this many milliseconds -->
            <value>20000</value>
        </property>
        <property name="maxIdleTime">
            <value>${c3p0.maxIdleTime}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${c3p0.idleConnectionTestPeriod}</value>
        </property>
        <property name="automaticTestTable">
            <value>${c3p0.automaticTestTable}</value>
        </property>
    </bean>
    <bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
       
        <property name="annotatedClasses">
            <list>
                <value>fi.passiba.services.biblestudy.persistance.Booksection</value>
                <value>fi.passiba.services.biblestudy.persistance.Bibletranslation</value>
                <value>fi.passiba.services.biblestudy.persistance.Verse</value>
                <value>fi.passiba.services.biblestudy.persistance.Chapter</value>
                <value>fi.passiba.services.biblestudy.persistance.Book</value>
                <value>fi.passiba.services.biblestudy.persistance.Biblesession</value>
                <value>fi.passiba.services.group.persistance.Groupservice</value>
                <value>fi.passiba.services.group.persistance.Groups</value>
                <value>fi.passiba.services.persistance.Status</value>
                <value>fi.passiba.services.persistance.Person</value>
                <value>fi.passiba.services.persistance.Adress</value>
                <value>fi.passiba.services.persistance.Users</value>
                <value>fi.passiba.services.biblestudy.datamining.persistance.Bookdatasource</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
					${hibernate.dialect}
                </prop>
                <prop key="hibernate.hbm2ddl.auto">
					create-drop
                </prop>
                <prop key="current_session_context_class">managed 
                </prop>
                <prop key="hibernate.transaction.flush_before_completion">true
                </prop>
                <prop key="hibernate.transaction.auto_close_session">true
                </prop>
                <prop key="hibernate.show_sql">true
                </prop>
                 <prop key="hibernate.format_sql">true
                </prop>
                 <prop key="hibernate.max_fetch_depth">3
                </prop>
                <prop key="hibernate.default_batch_fetch_size">4</prop>
              
                
            </props>
        </property>
        <property name="entityInterceptor">
            <ref bean="entityAuditInterceptor"/>
        </property>
    </bean>
    
    <bean id="entityAuditInterceptor" class="fi.passiba.hibernate.AuditInterceptor"/>
	<!-- setup transaction manager	-->
    <bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>


    
   
  
 
         <!--
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:file:introwicketdb"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="jdbcContactDao" class="fi.passiba.groups.dao.JdbcContactDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="loadTimeWeaver">
			<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
	</property>
		
	<property name="jpaVendorAdapter" ref="jpaAdapter"/>
   </bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
   
   <jee:jndi-lookup id="dataSource" jndi-name="java:biblestudyDS" resource-ref="true"  />
    
   
   <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		 <property name="showSql" value="true"/>
         <property name="generateDdl" value="true"/>
         <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
          <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
	</bean>
    <
    <bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="biblestudyPU" />
    </bean>
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
        <bean id="BooksectionDAO" class="fi.passiba.services.biblestudy.dao.BooksectionDAO">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
        </bean>-->
    <bean id="BibletranslationDAO"
		class="fi.passiba.services.biblestudy.dao.BibletranslationDAO">
		<!--<property name="entityManagerFactory"
			ref="entityManagerFactory" />-->
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="BooksectionDAO" class="fi.passiba.services.biblestudy.dao.BooksectionDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="VerseDAO" class="fi.passiba.services.biblestudy.dao.VerseDAO">
		<!--<property name="entityManagerFactory"
			ref="entityManagerFactory" />-->
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="ChapterDAO" class="fi.passiba.services.biblestudy.dao.ChapterDAO">
		<!--<property name="entityManagerFactory"
			ref="entityManagerFactory" />-->
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="BookDAO" class="fi.passiba.services.biblestudy.dao.BookDAO">
		<!--<property name="entityManagerFactory"
			ref="entityManagerFactory" />-->
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="GroupserviceDAO"
		class="fi.passiba.services.group.dao.GroupserviceDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="PersonDAO" class="fi.passiba.services.dao.PersonDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="AddressDAO" class="fi.passiba.services.dao.AddressDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
  
    <bean id="GroupsDAO" class="fi.passiba.services.group.dao.GroupsDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="BookDatasouceDAO" class="fi.passiba.services.biblestudy.datamining.dao.BookDatasouceDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="IAuthenticator" class="fi.passiba.services.authenticate.AuthenticatorImp">
        <property name="personDAO" ref="PersonDAO" />
    </bean>
    <bean id="IBibleDataMining" class="fi.passiba.services.biblestudy.datamining.BibleDataMiningImp">
        <property name="datasourceDAO" ref="BookDatasouceDAO" />
    </bean>
     <bean id="IGroupServices" class="fi.passiba.services.group.GroupServicesImp">
        <property name="groupDAO" ref="GroupsDAO" />
    </bean>
    <bean id="IAddressService" class="fi.passiba.services.address.AddressServiceImp">
        <property name="addressDAO" ref="AddressDAO" />
    </bean>
    <bean id="IBibleStudyService" class="fi.passiba.biblestudy.restlet.BibleStudyServiceImp">
        <property name="translationDao" ref="BibletranslationDAO"/>
        <property name="sectionDao" ref="BooksectionDAO" />
        <property name="bookDAO" ref="BookDAO" />
        <property name="chapterDao" ref="ChapterDAO" />
        <property name="verseDAO" ref="VerseDAO" />
    </bean>
        <!-- Quartz sceduling on single method -->
    <bean id="dailyBibleDataRetrievalJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="IBibleDataMining"/>
        <property name="targetMethod" value="retrieveBookdata" />
    </bean>
        
     <!--
            A CronTriggerBean, scheduler to run before mightnight every night
             cronExpresson=sec_min_hours_dayOfMonth_Month_DayOfWeek
    -->
    <bean id="cronBibleBookDataTrigger"
      class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="dailyBibleDataRetrievalJob"/>
        
        <property name="cronExpression" value="0 40 20 * * ?" />
    </bean>

   <!--
     A SchedulerFactoryBean to start the cronBibleBookDataTrigger.
    -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronBibleBookDataTrigger"/>
            </list>
        </property>
    </bean>
    
    <!-- A meta-data based assembler, enables metadata specific services exposed as (JMX)managed beans-->
  <bean id="assembler"
      class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
    <property name="attributeSource" ref="attributeSource" />
  </bean>
  
  <bean id="attributeSource"
      class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />
      
  <!-- The metadata-driven MBeanExporter-->
  <bean class="org.springframework.jmx.export.MBeanExporter">
    <property name="namingStrategy" ref="namingStrategy" />
 	  <property name="assembler" ref="assembler" />
    <property name="autodetectModeName" value="AUTODETECT_ASSEMBLER" />
  </bean>
  
  <!-- A meta-data based naming strategy> -->
  <bean id="namingStrategy"
      class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
    <property name="attributeSource" ref="attributeSource" />
  </bean>
  
  <!--Spring web serice client for retrieval of bible translation -->
  
   <bean id="webServiceTemplate" 
      class="org.springframework.ws.client.core.WebServiceTemplate">
    <property name="marshaller" ref="marshaller" />
    <property name="unmarshaller" ref="marshaller" />
    <property name="defaultUri" value="http://www.gnpcb.org/esv/share/soap/" />
  </bean>
  
  <bean id="marshaller" 
      class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
  
        <property name="contextPath" value="fi.passiba.biblestudy.crosswaybible.webservice.client"/>
        <property name="schema" value="classpath:crossway.bible.xsd"/>  
   </bean>
  <bean id="marshallingClient"
      class="fi.passiba.biblestudy.crosswaybible.webservice.client.BibleVerseClient">
    <property name="webServiceTemplate" ref="webServiceTemplate" />
  </bean>

</beans>