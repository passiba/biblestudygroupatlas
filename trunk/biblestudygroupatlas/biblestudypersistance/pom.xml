<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fi.passiba.biblestudy</groupId>
        <artifactId>biblestudymain</artifactId>
        <version>1.0</version>
    </parent>
    <groupId>fi.passiba.biblestudy</groupId>
    <artifactId>biblestudypersistance</artifactId>
    <packaging>jar</packaging>
    <name>biblestudypersistance</name>
    <version>1.0</version>
    <repositories>
 <!--<repository>
  <id>java.net</id> 
  <url>https://maven-repository.dev.java.net/nonav/repository</url> 
  <layout>legacy</layout> 
  </repository>
  
  <repository>
  <id>java.net</id> 
  <url>http://download.java.net/maven/2/</url> 
  <layout>legacy</layout> 
  </repository>-->
        <repository>
            <id>maven</id>
            <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
            <!--  found at https://maven-repository.dev.java.net  -->
            <id>java.net</id>
            <url>http://download.java.net/maven/2</url>
        </repository>
    </repositories>
    <dependencies>
             
        <!-- Jdom -->
        <dependency>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.0</version>
        </dependency> 
               <!-- LOGGING DEPENDENCIES - LOG4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <!--  JUNIT DEPENDENCY FOR TESTING -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.2</version>
            <scope>test</scope>
        </dependency>

        
       
        <!-- SPRING DEPENDENCY FOR THE EXAMPLE APP -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>${spring.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.2.1.ga</version>
        </dependency>

        <!--
        
       
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.2.1.ga</version>
           <scope>test</scope>
           
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.2.1.ga</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.2.1.ga</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>jta</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>geronimo-spec</groupId>
            <artifactId>geronimo-spec-jta</artifactId>
            <version>1.0.1B-rc4</version>
        </dependency>-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.3.0.ga</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>3.3.0.ga</version>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.0.4</version>
        </dependency>
       
        
      
    <!-- Quartz 1.6.0 depends on commons collections -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.0.1B</version>
        </dependency>

      
       <!--
        <dependency>
            <groupId>org.restlet</groupId>
            <artifactId>org.restlet.ext.jaxrs</artifactId>
            <version>1.1-M5</version>
        </dependency>-->
    </dependencies>
     <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <linkXref>true</linkXref>
                    <targetJdk>1.5</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
    <build>
        <finalName>biblestudypersistance</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <!--this pluging generates the database schema creation sql script -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <components>
                        <component>
                            <name>hbm2ddl</name>
                            <implementation>annotationconfiguration</implementation>
                        </component>
                        <component>
                            <name>hbmdoc</name>
                        </component>
                    </components>
                    <componentProperties>
                        <configurationfile>/target/classes/hibernate.cfg.xml</configurationfile>
                        <outputfilename>schema.ddl</outputfilename>
                        <namingstrategy>org.hibernate.cfg.ImprovedNamingStrategy</namingstrategy>
                        <drop>false</drop>
                        <create>true</create>
                        <export>false</export>
                        <format>true</format>
                    </componentProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dbunit-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.6</version>
                        <scope>test</scope>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${jdbc.driver}</driver>
                    <url>${jdbc.url}</url>
                    <username>${jdbc.username}</username>
                    <password>${jdbc.password}</password>
                    <skip>${maven.test.skip}</skip>
                    <src>${originalDataSetFile}</src>
                    <supportBatchStatement>true</supportBatchStatement>

                </configuration>
                <executions>
                    
                    <execution>
                        <id>insert</id>
                        <phase>test</phase>
                        <goals>
                            <goal>operation</goal>
                        </goals>
                        <configuration>
                            <type>CLEAN_INSERT</type>
                        </configuration>
                    </execution>
                   <!-- <execution>
                        <id>export</id>
                        <phase>test</phase>
                        <goals>
                            <goal>export</goal>
                        </goals>
                        <configuration>
                            <dest>${exportedDataSetFile}</dest>
                        </configuration>
                    </execution>
                    <execution>
                        <id>clean-insert-the-exported-dataset</id>
                        <phase>test</phase>
                        <goals>
                            <goal>operation</goal>
                        </goals>
                        <configuration>
                            <type>CLEAN_INSERT</type>
                            <src>${exportedDataSetFile}</src>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compare-database-with-original-dataset</id>
                        <phase>test</phase>
                        <goals>
                            <goal>compare</goal>
                        </goals>
                        <configuration>
                            <src>${originalDataSetFile}</src>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compare-table-with-original-dataset</id>
                        <phase>test</phase>
                        <goals>
                            <goal>compare</goal>
                        </goals>
                        <configuration>
                            <src>${originalDataSetFile}</src>
                            <tables>
                                <table>
                                    <name>person</name>
                                </table>
                            </tables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compare-queries-with-original-dataset</id>
                        <phase>test</phase>
                        <goals>
                            <goal>compare</goal>
                        </goals>
                        <configuration>
                            <src>${originalDataSetFile}</src>
                            <queries>
                                <query>
                                    <name>person</name>
                                    <sql>select * from person</sql>
                                </query>
                            </queries>
                        </configuration>
                    </execution>-->
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                    <exclude>**/hibernate.cfg.xml</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>
    </build>
    <properties>
        <slf4j.version>1.4.3</slf4j.version>
        <spring.version>2.0.7</spring.version>
        <spring.ws.version>1.0.4</spring.ws.version>
        <spring.modules.version>0.8a</spring.modules.version>
        
         <jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
         <jdbc.url>jdbc:mysql://localhost:3306/biblestudy?autoReconnect=true</jdbc.url>
        <jdbc.username>bibleuser</jdbc.username>
        <jdbc.password>b8bl47s4r</jdbc.password>
        <maven.test.skip>false</maven.test.skip>
        <originalDataSetFile>./src/test/data/sample-data.xml</originalDataSetFile>
    </properties>
</project>
